name: API Handler

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action type (createRepo, listFiles, uploadFiles)'
        required: true
      username:
        description: 'Unique user repo name (e.g. repo-username)'
        required: true
      files:
        description: 'Base64 encoded files JSON array'
        required: false

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Run backend logic
        env:
          AS_TOKEN: ${{ secrets.AS_TOKEN }}
        run: |
          set -e  # fail fast on error
          ACTION="${{ github.event.inputs.action }}"
          USER="${{ github.event.inputs.username }}"
          FILES="${{ github.event.inputs.files }}"

          echo "Action: $ACTION, User: $USER"

          if [ "$ACTION" == "createRepo" ]; then
            echo "Creating repo ArchaeoSight/$USER..."
            curl -s -X POST \
              -H "Authorization: token $AS_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/orgs/ArchaeoSight/repos \
              -d "{\"name\":\"$USER\",\"private\":true,\"auto_init\":true}"

          elif [ "$ACTION" == "listFiles" ]; then
            echo "Listing files for ArchaeoSight/$USER..."
            curl -s -H "Authorization: token $AS_TOKEN" \
                     -H "Accept: application/vnd.github+json" \
                     https://api.github.com/repos/ArchaeoSight/$USER/contents

          elif [ "$ACTION" == "uploadFiles" ]; then
            echo "$FILES" | jq -c '.[]' | while read -r FILE; do
              NAME=$(echo "$FILE" | jq -r '.path')
              CONTENT=$(echo "$FILE" | jq -r '.contentBase64')
              echo "Uploading $NAME to $USER..."
              curl -s -X PUT \
                   -H "Authorization: token $AS_TOKEN" \
                   -H "Content-Type: application/json" \
                   -d "{\"message\":\"Add $NAME\",\"content\":\"$CONTENT\"}" \
                   https://api.github.com/repos/ArchaeoSight/$USER/contents/$NAME
            done
          else
            echo "Invalid action: $ACTION"
            exit 1
          fi
